// <auto-generated />
using System;
using ContactMangAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactMangAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250908192533_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContactMangAPI.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Email")
                        .IsUnique();

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2000, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara.hassan@example.com",
                            FirstName = "Sara",
                            LastName = "Hassan",
                            PhoneNumber = "+201001234567",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1998, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ali.khaled@example.com",
                            FirstName = "Ali",
                            LastName = "Khaled",
                            PhoneNumber = "+201112223334",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1995, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mona.adel@example.com",
                            FirstName = "Mona",
                            LastName = "Adel",
                            PhoneNumber = "+201223344556",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1992, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hany.tarek@example.com",
                            FirstName = "Hany",
                            LastName = "Tarek",
                            PhoneNumber = "+201334455667",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1999, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nour.salem@example.com",
                            FirstName = "Nour",
                            LastName = "Salem",
                            PhoneNumber = "+201445566778",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2001, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "youssef.ibrahim@example.com",
                            FirstName = "Youssef",
                            LastName = "Ibrahim",
                            PhoneNumber = "+201556677889",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(1996, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "laila.mahmoud@example.com",
                            FirstName = "Laila",
                            LastName = "Mahmoud",
                            PhoneNumber = "+201667788990",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(1994, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "karim.omar@example.com",
                            FirstName = "Karim",
                            LastName = "Omar",
                            PhoneNumber = "+201778899001",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(1997, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dina.fouad@example.com",
                            FirstName = "Dina",
                            LastName = "Fouad",
                            PhoneNumber = "+201889900112",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(1993, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mostafa.samir@example.com",
                            FirstName = "Mostafa",
                            LastName = "Samir",
                            PhoneNumber = "+201990011223",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ContactMangAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ContactMangAPI.Models.Contact", b =>
                {
                    b.HasOne("ContactMangAPI.Models.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ContactMangAPI.Models.User", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
